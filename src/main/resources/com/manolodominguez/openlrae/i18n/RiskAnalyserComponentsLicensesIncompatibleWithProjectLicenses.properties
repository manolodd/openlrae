
ALTHOUGH=Although
TRY_TO_REPLACE=Try to replace
CANNOT_BE_INCLUDED_IN=cannot be included in
IS_COMPATIBLE_WITH_BLAH=is compatible with a project released under
AND_CAN_BE_INCLUDED_IN=and can be included in
IT_COULD_BE_SOURCE_OF_BLAH=it could be a source of risk for the evolution of the project in the future, because it is not natively compatible.
BE_SURE_YOU_HAVE_WRITTEN_BLAH=Be sure you have written permission from the copyright holder of
TO_USE_IT_IN_BLAH=to use it in a project licensed under
BY_ANOTHER_COMPONENT_NATIVELY_BLAH=by another component natively compatible with a project released under
THE_LICENSE_OF_THE_PROJECT_IS_UNKNOWN_AND_BLAH=The license of the component is unknown and, therefore, assumed as incompatible with
IS_HANDLED_AS_INCOMPATIBLE_BLAH=is handled as incompatible because its undefined license, it could be compatible once its license is known.
BY_ANOTHER_COMPONENT_KNOWN_BLAH=by another component with a license known to be compatible with a project released under
TRY_TO_ASK_THE_BLAH=Try to ask the copyright holder of
TO_CLARIFY_THE_LICENSE_BLAH=to clarify the license of the component and know if it is compatible with a project licensed under
OR_NOT=or not.
IS_HANDLED_AS_INCOMPATIBLE_UNSUPPORTED_BLAH=is handled as incompatible because OpenLRAE does not support its license, it could be really compatible with a project licensed under
WE_APOLOGIZE_BLAH=We apologize for the inconvenience.
OPENLRAE_DOES_NOT_SUPPORT=OpenLRAE does not support the license of the component yet and, therefore, it is assumed as incompatible with
BY_ANOTHER_COMPONENT_WITH_BLAH=by another component with a license supported by OpenLRAE and compatible with a project released under
UNTIL_A_DEEP_BLAH_1=until a deep analysis. Its license is compatible with a project released under
EXCEPT_UNDER_BLAH=except under certain circumstances.
CARRY_OUT_A_DEEP_BLAH_1=Carry out a deep analysis to be sure that your specific case is not one of the exceptions in wich
IS_INCOMPATIBLE_WITH_BLAH=is incompatible with a project released under
BEFORE_USING_BLAH=before using the component in the project.
BY_ANOTHER_COMPONENT_FULLY_BLAH=by another component fully compatible with a project licensed under
CARRY_OUT_A_DEEP_BLAH_2=Carry out a deep analysis to be sure that your specific case is one of the exceptions in wich
UNTIL_A_DEEP_BLAH_2=until a deep analysis. Its license is incompatible with a project released under
TRY_TO_GET_BLAH=Try to get written permission from the copyright holder of
BY_ANOTHER_COMPONENT_COMPATIBLE_BLAH=by another component compatible with a project licensed under
THE_LICENSE_OF_THE_PROJECT_IS_INCOMPATIBLE_BLAH=The license of the component is incompatible with
IS_NATIVELY_BLAH=is natively compatible and can be included in
IS_FORCED_TO_BLAH=is forced to be fully compatible and can be included in
YOUR_PROJECT_HAS_LEGAL_BLAH=Your project has legal issues to solve before you can use the set of component you have defined with their corresponding bindigs and with the selected project distribution. This is not about trends, maintenance difficulties, etc. Something is legal or it is not; but cannot be half-legal. Be careful and be respectful of the license terms selected by other authors. A simple line of code under the wrong license can give you legal consequences.
GENERAL_TIP_1=General tip: try not to link component statically in your project as it is more likely to have incompatibilities.
GENERAL_TIP_2=General tip: try not to include a derivative work of a component under a different license than the original component as it is more likely to have incompatibilities.
GENERAL_TIP_3=General tip: try to use components with permisive licenses as it is more problable not to have licensing risks.
GENERAL_TIP_4=General tip: try not to use components released under an undefined license because from a legal point of view this is the same than the most restrictive license (all right reserved). Not having a defined license is not the same as released to public domain. The latter has to be declared explicitly.
GENERAL_TIP_5=General tip: when modifying the project bill of components to reduce the exposure to this risks, start changing components that are root causes in more cases.
GENERAL_TIP_6=General tip: when modifying the project bill of components to reduce the exposure to this risks, start with those with higher level of contribution to the overall project.
GENERAL_TIP_7=General tip: if you own all right on a given risky component, try changing its license instead of looking for another component.
GENERAL_TIP_8=General tip: try not to use more than a license for the project unless completely necessary. It makes very difficult to include new components in the project as their licenses have to be compatible with all project licenses simultaneously.
