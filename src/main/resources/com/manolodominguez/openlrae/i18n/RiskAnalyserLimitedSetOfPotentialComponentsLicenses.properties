
COMPONENT_WITH_LICENSE=component with license
ALTHOUGH_A=Although a
COULD_BE_INCLUDED_IN=could be included in
BE_SURE_YOU_HAVE_WRITEN_BLAH=be sure you have written permission from the copyright holder to use it in a project licensed under
A=A
COULD_NOT_BE_INCLUDED_IN=could not be included in
BECAUSE_IT_IS_INCOMPATIBLE_WITH=because it is incompatible with
TRY_TO_USE_A_BLAH=Try to use a project license different from
THAT_ALLOW_A=that allow a
TO_BE_INCLUDED_BLAH=to be included in the project.
BECAUSE_IT_IS_NOT_KNOWN_BLAH=because it is not known to be compatible with
AND_THEREFORE_BLAH=and therefore, it is handled as incompatible.
WHENEVER_YOU_PLAN=Whenever you plan to include a
ASK_THE_AUTHOR_BLAH=ask the author of that component to clarify the license of the component and know whether it is compatible with a project licensed under
OR_NOT=or not.
OPENLRAE_DOES_NOT=OpenLRAE does not support the license of the component yet and, therefore, it would be assumed as incompatible with
WE_APOLOGIZE_BLAH=We apologize for the inconvenience.
WOULD_BE_HANDLED_BLAH=would be handled as incompatible because OpenLRAE does not support its license, it could be really compatible with a project licensed under
TRY_TO_USE_A_BLAH_2=try to use a component with a supported license instead if you want to analyse the project with OpenLRAE in an effective way.
UNTIL_A_DEEP_BLAH=until a deep analysis. Its license is compatible with a project licensed under
EXCEPT_UNDER_BLAH=except under certain circumstances.
BEFORE_INCLUDING_BLAH=Before including in the project a
CARRY_OUT_A_DEEP_BLAH=carry out a deep analysis to be sure that your specific case would not be one of the exceptions in wich a
IS_INCOMPATIBLE_WITH_BLAH=is incompatible with a project licensed under
INSTEAD_OF_A=Instead of a
TRY_TO_CHOOSE_BLAH=try to choose another component fully compatible with a project licensed under
UNTIL_A_DEEP_BLAH_2=until a deep analysis. Its license is incompatible wit a project released under
CARRY_OUT_A_DEEP_BLAH_2=carry out a deep analysis to be sure that your specific case would be one of the exceptions in wich
IS_COMPATIBLE_WITH_BLAH=is compatible with a project released under
BECAUSE_IT_IS_NATIVELY_BLAH=because it is natively compatible with project licenses.
BECAUSE_IT_IS_FORCED_BLAH=because it is forced to be fully compatible with project licenses.
COULD_BE_USED_BLAH=could be used in the project, it could be a source of risk for the evolution of the project in the future because it is not natively compatible.
GENERAL_TIP_1=General tip: try not to link component statically in your project as it is more likely to have incompatibilities.
GENERAL_TIP_2=General tip: try not to include a derivative work of a component under a different license than the original component as it is more likely to have incompatibilities.
GENERAL_TIP_3=General tip: try to use components with permisive licenses as it is more problable not to have licensing risks.
GENERAL_TIP_4=General tip: try not to use components released under an undefined license because from a legal point of view this is the same than the most restrictive license (all right reserved). Not having a defined license is not the same as released to public domain. The latter has to be declared explicitly.
GENERAL_TIP_5=General tip: when modifying the project bill of components to reduce the exposure to this risks, start changing components that are root causes in more cases.
GENERAL_TIP_6=General tip: when modifying the project bill of components to reduce the exposure to this risks, start with those with higher level of contribution to the overall project.
GENERAL_TIP_7=General tip: if you own all right on a given risky component, try changing its license instead of looking for another component.
GENERAL_TIP_8=General tip: try not to use more than a license for the project unless completely necessary. It makes very difficult to include new components in the project as their licenses have to be compatible with all project licenses simultaneously.
IN_A_PROJECT_BLAH=in a project licensed under
